/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  FileType: "ARCHIVE" | "EXECUTABLE" | "UNKNOWN"
  PatchFormat: "IPS"
  PatchType: "AUDIO" | "ENVIRONMENT" | "MECHANICS" | "OTHER" | "TRANSLATION" | "VISUAL"
  PlatformType: "NINTENDO_ENTERTAINMENT_SYSTEM" | "SUPER_NINTENDO_ENTERTAINMENT_SYSTEM" | "WINDOWS_32"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Directory: { // root type
    uri?: string | null; // String
  }
  File: { // root type
    md5?: string | null; // String
    sha256?: string | null; // String
    size?: number | null; // Int
    uri?: string | null; // String
  }
  Game: { // root type
    name?: string | null; // String
    software?: Array<NexusGenRootTypes['Software'] | null> | null; // [Software]
  }
  Hash: { // root type
    crc32?: string | null; // String
    md5?: string | null; // String
    sha1?: string | null; // String
    sha256?: string | null; // String
    sha512?: string | null; // String
  }
  Launcher: { // root type
    name?: string | null; // String
    software?: Array<NexusGenRootTypes['Software'] | null> | null; // [Software]
    supports?: Array<NexusGenRootTypes['LauncherSupport'] | null> | null; // [LauncherSupport]
  }
  LauncherSupport: { // root type
    locations?: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    platforms?: Array<NexusGenEnums['PlatformType'] | null> | null; // [PlatformType]
  }
  Patch: { // root type
    applications?: Array<NexusGenRootTypes['Application'] | null> | null; // [Application]
    format?: Array<NexusGenEnums['PatchFormat'] | null> | null; // [PatchFormat]
    locations?: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    name?: string | null; // String
    patches?: Array<NexusGenRootTypes['Patch'] | null> | null; // [Patch]
    supports?: Array<NexusGenRootTypes['Hash'] | null> | null; // [Hash]
    type?: Array<NexusGenEnums['PatchType'] | null> | null; // [PatchType]
    version?: string | null; // String
  }
  Query: {};
  Software: { // root type
    applications?: Array<NexusGenRootTypes['Application'] | null> | null; // [Application]
    locations?: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    name?: string | null; // String
    patches?: Array<NexusGenRootTypes['Patch'] | null> | null; // [Patch]
    platform?: NexusGenEnums['PlatformType'] | null; // PlatformType
    version?: string | null; // String
  }
}

export interface NexusGenInterfaces {
  Application: NexusGenRootTypes['Game'] | NexusGenRootTypes['Launcher'];
  Location: NexusGenRootTypes['Directory'] | NexusGenRootTypes['File'];
  Program: NexusGenRootTypes['Software'] | NexusGenRootTypes['Patch'];
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Directory: { // field return type
    uri: string | null; // String
  }
  File: { // field return type
    md5: string | null; // String
    sha256: string | null; // String
    size: number | null; // Int
    type: NexusGenEnums['FileType'] | null; // FileType
    uri: string | null; // String
  }
  Game: { // field return type
    name: string | null; // String
    software: Array<NexusGenRootTypes['Software'] | null> | null; // [Software]
  }
  Hash: { // field return type
    crc32: string | null; // String
    md5: string | null; // String
    sha1: string | null; // String
    sha256: string | null; // String
    sha512: string | null; // String
  }
  Launcher: { // field return type
    name: string | null; // String
    software: Array<NexusGenRootTypes['Software'] | null> | null; // [Software]
    supports: Array<NexusGenRootTypes['LauncherSupport'] | null> | null; // [LauncherSupport]
  }
  LauncherSupport: { // field return type
    locations: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    platforms: Array<NexusGenEnums['PlatformType'] | null> | null; // [PlatformType]
  }
  Patch: { // field return type
    applications: Array<NexusGenRootTypes['Application'] | null> | null; // [Application]
    format: Array<NexusGenEnums['PatchFormat'] | null> | null; // [PatchFormat]
    locations: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    name: string | null; // String
    patches: Array<NexusGenRootTypes['Patch'] | null> | null; // [Patch]
    supports: Array<NexusGenRootTypes['Hash'] | null> | null; // [Hash]
    type: Array<NexusGenEnums['PatchType'] | null> | null; // [PatchType]
    version: string | null; // String
  }
  Query: { // field return type
    games: Array<NexusGenRootTypes['Game'] | null> | null; // [Game]
    hello: string | null; // String
    plugin__simonwjackson__hello: string | null; // String
    storeSearch: Array<NexusGenRootTypes['Program'] | null> | null; // [Program]
  }
  Software: { // field return type
    applications: Array<NexusGenRootTypes['Application'] | null> | null; // [Application]
    locations: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    name: string | null; // String
    patches: Array<NexusGenRootTypes['Patch'] | null> | null; // [Patch]
    platform: NexusGenEnums['PlatformType'] | null; // PlatformType
    version: string | null; // String
  }
  Application: { // field return type
    name: string | null; // String
    software: Array<NexusGenRootTypes['Software'] | null> | null; // [Software]
  }
  Location: { // field return type
    uri: string | null; // String
  }
  Program: { // field return type
    applications: Array<NexusGenRootTypes['Application'] | null> | null; // [Application]
    locations: Array<NexusGenRootTypes['Location'] | null> | null; // [Location]
    name: string | null; // String
    patches: Array<NexusGenRootTypes['Patch'] | null> | null; // [Patch]
    version: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Directory: { // field return type name
    uri: 'String'
  }
  File: { // field return type name
    md5: 'String'
    sha256: 'String'
    size: 'Int'
    type: 'FileType'
    uri: 'String'
  }
  Game: { // field return type name
    name: 'String'
    software: 'Software'
  }
  Hash: { // field return type name
    crc32: 'String'
    md5: 'String'
    sha1: 'String'
    sha256: 'String'
    sha512: 'String'
  }
  Launcher: { // field return type name
    name: 'String'
    software: 'Software'
    supports: 'LauncherSupport'
  }
  LauncherSupport: { // field return type name
    locations: 'Location'
    platforms: 'PlatformType'
  }
  Patch: { // field return type name
    applications: 'Application'
    format: 'PatchFormat'
    locations: 'Location'
    name: 'String'
    patches: 'Patch'
    supports: 'Hash'
    type: 'PatchType'
    version: 'String'
  }
  Query: { // field return type name
    games: 'Game'
    hello: 'String'
    plugin__simonwjackson__hello: 'String'
    storeSearch: 'Program'
  }
  Software: { // field return type name
    applications: 'Application'
    locations: 'Location'
    name: 'String'
    patches: 'Patch'
    platform: 'PlatformType'
    version: 'String'
  }
  Application: { // field return type name
    name: 'String'
    software: 'Software'
  }
  Location: { // field return type name
    uri: 'String'
  }
  Program: { // field return type name
    applications: 'Application'
    locations: 'Location'
    name: 'String'
    patches: 'Patch'
    version: 'String'
  }
}

export interface NexusGenArgTypes {
  Game: {
    software: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
  Launcher: {
    software: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
  Patch: {
    applications: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
  Query: {
    hello: { // args
      name?: string | null; // String
    }
    plugin__simonwjackson__hello: { // args
      name?: string | null; // String
    }
    storeSearch: { // args
      query?: string | null; // String
    }
  }
  Software: {
    applications: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
  Application: {
    software: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
  Program: {
    applications: { // args
      platforms?: NexusGenEnums['PlatformType'][] | null; // [PlatformType!]
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  Application: "Game" | "Launcher"
  Location: "Directory" | "File"
  Program: "Software" | "Patch"
}

export interface NexusGenTypeInterfaces {
  Directory: "Location"
  File: "Location"
  Game: "Application"
  Launcher: "Application"
  Patch: "Program"
  Software: "Program"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Application" | "Location" | "Program";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}